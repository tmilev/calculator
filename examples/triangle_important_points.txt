%HideLHS
%DontUsePredefinedWordSplits
TurnOffRules(CommonDenominator, AddTerms, DivideExpressionsAsIfPolynomial, CommuteIfUnivariate,CommuteAtimesBtimesCifUnivariate, ConstantExtraction, AssociativeRule, DistributeMultiplication);
a_1= MakeInputBox(name=a_1, value = 0);

a_2= MakeInputBox(name=a_2, value = 0);

b_1 = MakeInputBox(name=b_1, value = 1);

b_2 = MakeInputBox(name=b_2, value = 0);
c_1 = MakeInputBox(name=c_1, value = 0.9);
c_2 = MakeInputBox(name=c_2, value = 0.9);
A= (a_1, a_2);
B= (b_1, b_2);
C= (c_1, c_2);
t_a =     ((A-C)(B-C)^t)_1 / ((B-C)(B-C)^t)_1;
t_b =     ((B-A)(C-A)^t)_1 / ((C-A)(C-A)^t)_1;
t_c =     ((C-B)(A-B)^t)_1 / ((A-B)(A-B)^t)_1;

h_a=( b_1 t_a +c_1(1-t_a), b_2 t_a + c_2(1-t_a));
h_b=(c_1 t_b +a_1(1-t_b), c_2 t_b + a_2(1-t_b));
h_c=(a_1 t_c +b_1(1-t_c), a_2 t_c + b_2(1-t_c));
tick = 0.05;
tickSmall = 0.047;
lengthC = sqrt( (a_1-b_1)^2+(a_2-b_2)^2);
lengthA = sqrt( (b_1-c_1)^2+(b_2-c_2)^2);
lengthB = sqrt( (c_1-a_1)^2+(c_2-a_2)^2);
ab = (B-A)/ lengthC;
bc = (C-B)/ lengthA;
ca = (A-C)/ lengthB;
abperp = (-ab_2, ab_1);
bcperp = (-bc_2, bc_1);
caperp = (-ca_2, ca_1);
heel_a = (h_a+bc*tick, h_a+bcperp*tick+bc*tick, h_a + bcperp*tick);
heel_b = (h_b+ca*tick, h_b+caperp*tick+ca*tick, h_b + caperp*tick);
heel_c = (h_c+ab*tick, h_c+abperp*tick+ab*tick, h_c + abperp*tick);
bisector_a = (B+C)/2 + bcperp;
bisector_b = (C+A)/2 + caperp;
bisector_c = (A+B)/2 + abperp;

alpha_b = Arctan2(b_2-a_2, b_1-a_1) ;
alpha_c =  Arctan2(c_2-a_2, c_1-a_1);

beta_c = Arctan2(c_2-b_2, c_1-b_1) ;
protobeta_a = Arctan2(a_2-b_2, a_1-b_1);
beta_a =IfStandard (  protobeta_a-beta_c<0,protobeta_a+2pi,protobeta_a)  ;

gamma_a =Arctan2(a_2-c_2, a_1-c_1) ;
gamma_b =    Arctan2(b_2-c_2, b_1-c_1);


M = (A+B+C)/3;
D=2(a_1(b_2-c_2)+b_1(c_2-a_2)+c_1(a_2-b_2));
U= ( (a_1^2+a_2^2)(b_2-c_2)+(b_1^2+b_2^2)(c_2-a_2)+(c_1^2+c_2^2)(a_2-b_2), (a_1^2+a_2^2)(c_1-b_1)+(b_1^2+b_2^2)(a_1-c_1)+(c_1^2+c_2^2)(b_1-a_1))/D;
H=3M-2U;
N = (H+U)/2;
nl =sqrt( (N_1-(a_1+b_1)/2)^2 + (N_2-(a_2+b_2)/2)^2);

R =sqrt( (U_1-a_1)^2+(U_2-a_2)^2);
p  = lengthA + lengthB + lengthC;
I = (A lengthA + B lengthB + C lengthC)/p; 
r = sqrt(2(p/2 - lengthA )(p/2 - lengthB )(p/2 - lengthC )/p);

L_a = (B * lengthB + C* lengthC )/(lengthB+lengthC);
L_b = (C * lengthC + A* lengthA )/(lengthC+lengthA);
L_c = (A * lengthA + B* lengthB )/(lengthA+lengthB);

PlotPath((A,h_c, B,h_a, C,h_b, A), blue) 

+LayerLabel(
PlotSegment(A, (B+C)/2, purple)
+ PlotSegment(B, (C+A)/2, purple)
+ PlotSegment(C, (A+B)/2, purple)
+ PlotPoint((A+B+C)/3, orange) 
+ PlotLabel(M, "M")
, "medians")

+LayerLabel(
 PlotPath(heel_a, red) 
+ PlotPath(heel_b, red) 
+ PlotPath(heel_c, red) 
+ PlotSegment(A, h_a, green)
+ PlotSegment(B, h_b, green)
+ PlotSegment(C, h_c, green)
+ PlotPoint(H, purple)
+ PlotLabel(H, "H")
, "heights")

+LayerLabel(
PlotSegment(A, L_a, brown)
+PlotSegment(B, L_b, brown)
+PlotSegment(C, L_c, brown)
+PlotCurve( (a_1+tick*cos t, a_2 + tick*sin t), alpha_b, (alpha_c+alpha_b)/2, orange,3)
+PlotCurve( (a_1+tickSmall*cos t, a_2 + tickSmall*sin t), (alpha_c+alpha_b)/2, alpha_c, orange,3)

+PlotCurve( (b_1+tick*cos t, b_2 + tick*sin t), beta_c, (beta_a+beta_c)/2, orange,3)
+PlotCurve( (b_1+tickSmall*cos t, b_2 + tickSmall*sin t), (beta_a+beta_c)/2, beta_a, orange,3)

+PlotCurve( (c_1+tick*cos t, c_2 + tick*sin t), gamma_a, (gamma_b+gamma_a)/2, orange,3)
+PlotCurve( (c_1+tickSmall*cos t, c_2 + tickSmall*sin t), (gamma_b+gamma_a)/2, gamma_b, orange,3)

+ PlotPoint(I, red)
+PlotLabel(I, "I")
, "angle bisectors")

+LayerLabel(
PlotPoint(U, red)
+PlotLabel(U, "U")
+ PlotSegment(bisector_a, (B+C)/2, orange)
+ PlotSegment(bisector_b, (C+A)/2, orange)
+ PlotSegment(bisector_c, (A+B)/2, orange)
, "perpendicular bisectors"
)

+PlotLabel(A, "A")
+PlotLabel(B, "B")
+PlotLabel(C, "C")

+LayerLabel(
PlotCurve((U_1+R cos t, U_2+R sin t), 0, 2pi)
,"circumscribed circle")

+LayerLabel(PlotCurve(I+(r cos t, r sin t), 0, 2pi), "inscribed circle")

+LayerLabel(PlotSegment(H, U, brown), "Euler line")

+LayerLabel(
 PlotLabel(N, "N")
+ PlotPoint(N, red)
+PlotCurve(N+(nl cos t, nl sin t), 0, 2pi)
,"9 point circle"
)
+ PlotSelectablePoint((a_1, a_2))
+ PlotSelectablePoint((b_1, b_2))
+ PlotSelectablePoint((c_1, c_2))
+ PlotRemoveCoordinateAxes()
+PlotWindow(700, 700)

